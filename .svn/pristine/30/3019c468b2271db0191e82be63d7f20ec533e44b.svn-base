<template>
    <div class="yuqingdongtai yqdt">
        <div class="top">
            <div class="keyword-wrapper" ref="wrapper">
                <div class="scrollWrapper">
                    <span v-for="(item,index) in keyWords" class="spanItem" :class="{'active':testIndex == index}" @click="tabChange(index,item.themeId)">{{item.themeName}}</span>
                    <!--   <span class="spanItem">1111</span>
                    <span class="spanItem">22222</span>
                    <span class="spanItem">113333311</span>
                    <span class="spanItem">11444411</span>
                    <span class="spanItem">1155511</span> -->
                </div>
            </div>
            <div class="menuItem">
                <div class="menu" @click="popupVisibleMenu = true">
                    <i class="iconfont icon-shaixuan"></i>
                </div>
                
            </div>
        </div>
        <div class="content">
            <mt-loadmore :top-method="loadTop" :bottom-method="loadBottom" :auto-fill="false" ref="loadmore">
                <ul class="ulNews">
                    <li v-for="(item,index) in news" style="">
                    	
                        <div class="newstop" @click='openDetail(item)'>
                            <span v-html="item.title"></span>                           
                            <span class="tag" :class="classMap[item.sentimentType-1]">
                        	{{item.sentimentType | newsTag}}</span>
                        </div>
                        <div class="newsMenu">
                            <!-- <span>信息类型:{{item.type}}</span> -->
                            <span>来源：{{item.threadStarter}}</span>
                            <span class="time">{{item.publishTime }}</span>
                        </div>
                        <div class="similar" v-show="item.dupIdCount > 1">
                            <div class="title" @click="similarShow(item)">相似文章数({{item.dupIdCount-1}})<i class="iconfont icon-caret" :class="{'roll':roll}"></i></div>
                            <ul v-show="item.sub_newShow">
                               <!--  <li class="sub_news" v-for="(sub_news,subIndex) in item.similar.sub_news"
                                 @click='openDetail(sub_news)' v-show="subIndex < 4">
                                    <p class="title_news">{{sub_news.title}}</p>
                                    <div class="tag">                                       
                                        <span>来源：{{sub_news.source}}</span>
                                        <span class="time">{{sub_news.time | formatDate}}</span>
                                    </div>
                                </li>
                                <li class="moreSimilar" @click="openMoreSimilar">查看更多相似文章</li> -->
                               
                                <li class="sub_news" v-for="(sub_news,subIndex) in item.similarNews" @click='openDetail(sub_news)'>
                                    <p v-html="sub_news.title"></p>
                                     <div class="tag">                                       
                                        <span>来源：{{sub_news.threadStarter}}</span>
                                        <span class="time">{{sub_news.publishTime}}</span>
                                    </div>
                                </li>
                                 <li class="moreSimilar" @click="openMoreSimilar">查看更多相似文章</li>
                            </ul>                          
                        </div>
                    </li>
                </ul>
             
                <div slot="top" class="mint-loadmore-top">
                    <span v-show="topStatus !== 'loading'" :class="{ 'rotate': topStatus === 'drop' }">松开加载最新数据</span>
                    <span v-show="topStatus === 'loading'">加载完毕</span>
                </div>
              
            </mt-loadmore>
        </div>
        <mt-popup id="mt" v-model="popupVisibleContent" position="right">
            <!-- <div :detail="detail" class="detail-wrapper">{{detail.detail}}</div> -->
            <detail :selectedItem="selectedPage" v-on:closePanel="recieveMessage"></detail>
        </mt-popup>
        <mt-popup id="mt1" v-model="popupVisibleMenu" position="right">
            <condFilter :condFilter="condFilter" v-on:closePanel="recieveMessage" v-on:postarry="recieveCondFilter"></condFilter>
        </mt-popup>

       <mt-popup id="mt2" v-model="popupVisibleSearchRes" position="right">
            <advancedSearchRes v-on:fanhuiEvent="recieveMessage"></advancedSearchRes>
        </mt-popup>
        <v-footerTab></v-footerTab>
    </div>
</template>
<script>
import Vue from 'vue'
import { mapState } from 'vuex'
import BScroll from 'better-scroll'
import {
    Popup,
    Loadmore
} from 'mint-ui';
import detail from 'components/detail/detail';
import condFilter from 'components/condFilter/condFilter';
import footerTab from 'components/footerTab/footerTab';
import advancedSearchRes from 'components/advancedSearchRes/advancedSearchRes';
import axios from 'axios';
import qs from 'qs'

export default {
    data() {
            return {
                news: [],
                classMap: ['danger', 'middle', 'safe'],
                roll: false,
                allLoaded: false,
                keyWords: [],
                condFilter: {},
                testIndex: 0,
                popupVisibleContent: false,
                popupVisibleMenu: false,
                popupVisibleSearchRes:false,
                selectedPage: {},
                themeId:"",
                topStatus: '',
                similarNews:[],
                page: 1,
                pageSize: 10
            }
        },
        created() {
            this.$nextTick(function() {
                this.render();
                setTimeout(this._initScroll, 500)
            })
        },
        computed:mapState({ user: state => state.user }),

        // {
            
        // 	similarListFilter:function(){

        // 	}
        // }
        // ,
        methods: {
            //调取关键词接口
            renderKeywords:function(){
                let userId = this.user.userId;               
                return axios.post('/themeapp/getTheme',qs.stringify({'userId':userId}));
            },
            //调取新闻列表接口
            renderList:function(themeId){
                let userId = this.user.userId;
                let _themeId;
                _themeId = themeId?themeId:"";
                return axios.post('/themeapp/queryThemeArticle',
                    qs.stringify({
                        'userId':userId,
                        'themeId':_themeId,
                        'page':this.page,
                        'pageSize':this.pageSize
                }));
            },

            //调取相似新闻列表接口
            renderSimList:function(item,duplicates){
                 let userId = this.user.userId;
                return axios.post('/themeapp/queryThemeArticle', qs.stringify({
                    'userId': userId,
                    'themeId': this.themeId,
                    'pageSize':5,
                    'dupId':duplicates
                })).then(function(res) {
                   console.log('相似文章： '+res.data.resultList);
                   Vue.set(item,"similarNews",res.data.resultList)
                }).catch(function (error) {
                    console.log('错误信息： '+error);
                });


            },

            render: function() {
                /*var _this = this;                
                axios.get('static/data/yuqingdongtai.json', {
                        params: {
                            page: this.page
                        }
                    })
                    .then(function(res) {
                        //console.log(res)
                        _this.news = res.data.news;
                        _this.keyWords = res.data.keyWords
                        _this.condFilter = res.data.condFilter;
                    })
                    .catch(function(error) {
                        console.log(error);
                });*/
               
                
                var _this = this; 
                axios.all([this.renderKeywords(),this.renderList()])
                .then(axios.spread(function(keywordRes,list){
                    //两个请求现在都完成
                     _this.keyWords = keywordRes.data.themeList;
                     //_this.news = list.data.resultList;
                     _this.news = (_this.news).concat(list.data.resultList);
                     //默认设置keywords列表中第一个的themeId
                     _this.themeId = keywordRes.data.themeList[0].themeId;
                     _this.allLoaded = true; // 若数据已全部获取完毕
                     _this.$refs.loadmore.onBottomLoaded();
                    console.log("列表返回： "+JSON.stringify( _this.news))
                }));
            },
            similarShow: function(item) {
                if (typeof item.sub_newShow === 'undefined') {
                    //全局注册一个checked属性
                    Vue.set(item, "sub_newShow", true);                 

                    //局部注册
                    //this.$set(item,"checked",true)
                    this.renderSimList(item,item.duplicates);
                } else {
                    item.sub_newShow = !item.sub_newShow

                }

                this.roll = !this.roll
            },
            _initScroll() {
                // 计算滚动区域宽度
                var contentWidth = 30;
                var spanItem = document.getElementsByClassName('spanItem');
                var itemLength = spanItem.length;
                for (let i = 0; i < itemLength; i++) {
                    contentWidth += spanItem[i].offsetWidth;
                    console.log("spanItem" + i + ":" + spanItem[i].offsetWidth)
                }
                document.querySelector('.scrollWrapper').style.width = contentWidth + 'px';

                console.log('总宽度是' + contentWidth)


                this.keyWordScroll = new BScroll(this.$refs.wrapper, {
                    scrollX: true,
                    scrollY: false,
                    click: true
                });

            },
            tabChange: function(index,themeId) {
                this.testIndex = index;
                this.themeId = themeId
                var _this = this;
                console.log( this.themeId)
               /* axios.get('static/data/yuqingdongtai.json', {
                        params: {
                            page: this.page
                        }
                    })
                    .then(function(res) {
                        //console.log(res)
                        _this.news = res.data.news2;
                    })
                    .catch(function(error) {
                        console.log(error);
                    });
*/
            },
            openDetail: function(item) {
                this.popupVisibleContent = true;
                this.selectedPage = item;
            },

            openMoreSimilar:function(){
            	this.popupVisibleSearchRes = true;
            },
            recieveMessage: function(txt) {
                if (txt === 'close') {
                    this.popupVisibleContent = false;
                } else if (txt == 'closeFilter') {
                    this.popupVisibleMenu = false;
                }
                else if(txt == 'advancedSearchRes'){
                	this.popupVisibleSearchRes = false;
                }


            },

            recieveCondFilter: function(value) {
                alert(value)
                console.log(value)
            },
            handleTopChange(status) {

                this.topStatus = status;
            },

            loadTop(id) {
                //刷新列表
                this.page = 1;
                this.news.length = 0;
                this.render();
                this.$refs.loadmore.onTopLoaded();
            },
            loadBottom(id) {
                // 加载更多数据

                console.log('正在上拉加载。。')

                let nextPage = this.page++
                this.render();

               /* var _this = this;

                let pageup = this.page++;
                axios.get('static/data/yuqingdongtai.json', {
                        params: {
                            page: pageup
                        }
                    })
                    .then(function(res) {
                        console.log('上拉中的axios读取成功');
                        _this.news.push(
                            ...res.data.news2
                        )
                        _this.allLoaded = true; // 若数据已全部获取完毕
                        _this.$refs.loadmore.onBottomLoaded();

                        ;
                    })
                    .catch(function(error) {
                        console.log(error);
                    });*/

                //this.news = (this.news).concat(this.news);

            }
        },
        filters: {
            newsTag: function(value) {
                switch (value) {
                    case "9":
                        return '全部'
                        break;
                    case "1":
                        return '负面'
                        break;
                    case "2":
                        return '中性'
                        break;
                    case "3":
                        return '正面'
                        break;
                    default:

                }
            }
        },
        components: {
            Popup,
            detail,
            condFilter,
            advancedSearchRes,
            'v-footerTab': footerTab
        }
}
</script>
<!-- Add "scoped" attribute to limit CSS to this component only -->
<style scoped>
/*.mint-loadmore{height:calc(100vh - 110px) }*/
#mt,#mt1,#mt2{height: 100vh; width: 100vw;}
#app{
    display: flex;
}
.content{
    flex: 1;
    overflow-y: auto;
}
.footTab{
    position: static;
}
.yqdt .top {
    display: flex;
    height: 40px;
    line-height: 40px;
    background-color: #1c2532;
    position: fixed;
    width: 100%;
    z-index: 999;
    overflow: hidden;
}

.content {
    /*padding: 40px 0 60px 0;*/
    height: calc(100vh - 60px);
    padding-top:40px;
}

.yqdt .content ul li {
    padding: 10px;
    box-sizing: border-box;
  	/*height: 100px;*/
    border-bottom: 1px solid #ccc;
}

.yqdt .content ul li .newstop {
    width: 100%;
    margin-bottom: 15px;
    line-height: 24px;
    font-size: 16px;
   /* overflow: hidden;
    text-overflow: ellipsis;
    white-space: nowrap;*/
}

.yqdt .content ul li .newstop .tag {
    border-radius: 3px;
    padding: 2px 5px;
    font-size: 12px;
}

.yqdt .content ul li .newsMenu {
    display: flex;
}

.yqdt .content ul li .newsMenu span {
    flex: 1;
    color: #8a8a8a;
    font-size: 14px;
}

.yqdt .content ul li .newsMenu span.time {
    flex: 1;
}

.similar {
    flex-direction: column;
    font-size: 12px;
}

.similar .title {
    display: flex;
    width: 100%;
    justify-content: flex-end;
    margin-top: 15px;
    font-size: 14px; 
    color: #ff3333;
}

.similar ul {
    width: 100%
}

.similar .tag {
    display: flex;
    flex-direction: row;
   
}

.similar .tag {
    flex: 1;
}

.similar .tag span {
    line-height: 24px;
    font-size: 12px; 
    color: #999;
    margin-top: 5px;
}

.yqdt .content .similar .tag span.time {
   margin-left: 20px;
}

.similar .title_news {
    width: 90%;
    overflow: hidden;
    text-overflow: ellipsis;
    white-space: nowrap;
    margin-bottom: 5px;
}

.yqdt .content ul li .similar .sub_news{
	font-size: 14px;
	
	padding: 10px;
}

.yqdt .content ul li .similar .sub_news:last-child{
	font-size: 14px;
	border-bottom: none;
}




.tag.middle {
    color: #fff;
    background-color: #55a4e1;
 
}

.tag.danger {
    color: #fff;    
    background-color: #ff6c6c
}

.tag.safe {
    color: #fff;
    background-color: #35c870
}

.icon-caret {
    transition: all 1s;
    margin-top: -1px;
}

.roll {
    transform: rotate(180deg)
}

.yqdt .top {}
.mint-loadmore-top{
    /*margn-top:0;*/
}
.keyword-wrapper {
    flex: 1;
    overflow: hidden;
}

.scrollWrapper {
    white-space: nowrap;
}

.scrollWrapper span {
    color: #fff;
    font-size: 14px;
    padding: 0 10px;
    height: 97%;
    display: inline-block;
    box-sizing: border-box;
}

.keyword-wrapper span.active {
    color: #ff3333;
    border-bottom: 3px solid red
}

.menuItem {
    flex: 0 0 40px;
    display: flex;
    font-size: 24px;
    line-height: 35px;
}

.menuItem > div {
    flex: 1;
    text-align: center;
}

.menuItem i {
    font-size: 20px;
    color: #fff;
    line-height: 42px;
}

.yqdt .content ul li.moreSimilar{ border-bottom: none; text-align: center; font-size: 14px; color: #ff3333; }
</style>
