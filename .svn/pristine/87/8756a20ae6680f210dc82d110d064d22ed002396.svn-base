<template lang="html">
  <div class="subject-mangement" :class="{show:$store.state.personal.flag}">
    <div class="header">
      <span class='iconfont icon-caret back' @click='close()'></span>
      <span>新增推送</span>
      <span class=""></span>
    </div>
    <div class="formlist-wrap">
      <div class="formlist">
      <span>主题名称</span>
      <div>
    <!--     <select >
          <option v-for="item in options" :themeId="item.themeId" @click="selectChange(item)">{{item.themeName}}</option>
        </select> -->
        <select v-model="selected">
        <option v-for="option in options" v-bind:value="option">
          {{ option.themeName }}
        </option>
      </select>
      </div>
      <div class="formlist">
      <span>推送方式</span>
       <div class="bgl">
            <span v-for="item in types" :class='{active:item.falg}' @click='typesTab(item)'>{{item.name}}</span>
        </div>
      </div>
      <div class="formlist">
      <span>媒体类型</span>
        <div class="bgl">
            <span v-for="item in codeList" :class='{active:item.active}' @click='mTypeTab(item)'  >{{item.itemValue}}</span>
         
        </div>
      </div>
      <div class="formlist">
      <span>推送时段</span>
        <div>
           <input type="time" v-model='startTime'>至<input  v-model='endTime' type="time">（时间相同 则全天提醒)
        </div>
      </div>
      <div class="formlist">
      <span>手机号</span>
      <input type="text" name=""  v-model='phones' placeholder='输入手机号' :value='editem.name'  id='name'>
      </div>
      <div class="formlist">
      <span>邮箱</span>
      <input type="text" name="" v-model='mails' placeholder='输入邮箱地址' :value='sparray(editem.keyWords)'  id='keyWords'>
      </div>
      <button class="btn"  @click='submit(editem)'>保存</button>
    </div>
  </div>
</template>

<script>
import store from '../../../store'
import axios from 'axios';
import qs from 'qs';
export default {
  data() {
    return {
      keyWords: '',
      selected:'',
      options:'',
      themeId:'',
      sentimentType:'',
      themeName:'',
      codeList:[],
      types:[{
        name:'短信',
        falg:false
      },{
        name:'邮件',
        falg:false
      }]
      ,mails:"",
      phones:'',
      freeTime:'',
      startTime:'',
      endTime:''

    }
  },
  props:['editem','themesList'],
  methods: {
    sparray(data){
      if(data){
        return data.join(" ")
      }

    }, 
    init(){
      this.getoptions();
      this.getMastList()
    },
    selectChange(item){
      this.themeId=item.themeId
      this.themeName=item.themeName
      console.log(item)
    },
    typesTab(item){
      this.mediaType=item.name
        this.types.forEach(i=>{
          if (i==item) {
             i.falg=true
             
          }else{
             i.falg=false
          }
        })
    },
    mTypeTab(item){
          let _this=this
         this.codeList.forEach(i=>{
          if (item.itemCode==0) {
              _this.sentimentType=item.itemValue
              if (i==item) {
                 item.active=true
              }else{
                 i.active=false
              }
          }else{
             if (i==item) {
                 i.active=true
                 _this.sentimentType+=item.itemValue+","
                 _this.sentimentType=_this.sentimentType.replace('全部',"")
              }
              this.codeList[0].active=false
          }
          
        })
         console.log(_this.sentimentType)
    },
    getoptions(){
      var  _this=this
      axios.post('/themeapp/getTheme',qs.stringify({'userId':'402894fe5a87a362015a87a8655d0000'})).then(function (res) {
         if(res.data.code==0){
            _this.options =res.data.themeList
         }
      });
    },
    getMastList(){
        var  _this=this
        axios.post('/userapp/getMastList',qs.stringify({'typeId':'001'})).then(function (res) {
           if(res.data.code==0){
             _this.codeList=res.data.codeList
              _this.codeList.forEach(v=>{
                _this.$set(v,'active',false)
            })

           }
        });
      },   
    submit(v) {
       let  _this=this
       let  parms={
            userId:'402894fe5a87a362015a87a8655d0000',
            themeId:_this.selected.themeId,
            mails:_this.mails,
            phones:_this.phones,
            mediaType:this.mediaType,
            sentimentType:_this.sentimentType,
            themeName:_this.selected.themeName,
            freeTime:_this.startTime+','+_this.endTime
       }
        axios.post('/warnapp/addWarn',qs.stringify({'typeId':'001'})).then(function (res) {
           if(res.data.code==0){
              this.close()

           }
        });
    },
    close() {
      document.querySelector('#name').value=""
      document.querySelector('#keyWords').value=""
      document.querySelector('#unkeyWords').value=""
      store.commit('increment')
    }
  },
  store,
  mounted:function(){
    // this.themesList=this.editem;
  },
  components:{
  }
}
</script>

<style lang="css" scoped>
.inwrap{display: none}
.subject-mangement{
  width: 100vw;
  height: calc(100vh);
  position: fixed;
  top:0;
  left:0;
  right:0;
  bottom:0;
  display: flex;
  flex-direction: column;
  justify-content: space-around;
  background: #fff;
  display: none;
}
.inner{
  width: 100vw;
  height: 100%;
  
}
.formlist-wrap{

  flex: 1;
}
div.show{
  display: block;
  display: flex;

}
.header{
  height: 50px;
  background: #ccc;
  line-height: 50px;
  display: flex;
  justify-content: space-between;
  padding: 0 10px;
  background: #1c2532;
   color: #fff;
   font-size: 18px;
}
.header .icon-jiahao{
  font-size: 26px;

}
.header .back{
  font-size: 32px;
  transform: rotate(90deg);
  display: inline-block;
}
.formlist-wrap{
  flex: 1;
  padding:20px 30px;
  box-sizing: border-box;
  overflow-y: auto;
}
.formlist{
  display: flex;
  flex-direction: column;
  margin-bottom: 30px;
}
.formlist span{
  font-size: 15px;
  margin-bottom: 10px;
  color: #000;
}
.formlist input{
 height: 40px;
 padding: 0 10px;
 background: #ebebeb;
 border-radius: 5px;
 outline: none;
}
.formlist select{
 height: 40px;
 padding: 0 10px;
 border-radius: 5px;
 background: #fff;
 display: inline-block;
 border:1px solid #999999;
 outline: none;
 color: #999999;
 font-size: 13px;
 margin-bottom: 30px;
}
.formlist .tip{
  line-height: 1.2;
  font-size: 12px;
  margin-top: 5px;
  color: #999;
}
.btn{
  height: 40px;
  border-radius: 5px;
  color: #fff;
  background: #ff3333;
  display: block;
  border:none;
  width: 100%;
  font-size: 15px;outline: none;
}
.bgl>span.active{
  
  border:1px solid #666666;
  color: #666666;
}
.bgl>span{
  line-height: 32px;
  display: inline-block;
  height: 32px;
  padding: 0 30px;
  border-radius: 3px;
  border:1px solid #999999;
  color: #999999;
  margin-right: 5px;
}
.bgl>span.active{
  border:1px solid #ff3333;
  color: #ff3333;
  background: url(/static/img/right.png) no-repeat 10px center;
  background-size: 20%;
}
</style>
