<template lang="html">
  <div class="subject-mangement" :class="{show:$store.state.personal.flag}">
    <div class="header">
      <span class='iconfont icon-caret back' @click='close()'></span>
      <span>新建主题</span>
      <span class=""></span>
    </div>
    <div class="formlist-wrap">
      <div class="formlist">
      <span>设置主题名称:</span>
      <input type="text" name=""  placeholder='设置主题名称' :value='editem.themeName'  id='name'>
      </div>
      <div class="formlist">
      <span>设置关联词:</span>
      <input type="text" name=""  placeholder='设置关联词' :value='sparray(editem.keywords)'  id='keyWords'>
      <p class="tip">每个主题最多可设置5组关键词，关键词之间用空格隔开</p>
      </div>
      <div class="formlist">
      <span>设置排除词:</span>
      <input type="text" name=""  placeholder='设置排除词'  :value='editem.noquerykeywords' id='unkeyWords'>
      <p class="tip">每个主题最多可设置5组排除词</p>
      </div>
      <button class="btn"  @click='submit()'>完成</button>
    </div>
  </div>
</template>

<script>
import store from '../../../store'
import axios from 'axios';
import qs from 'qs';
export default {
  data() {
    return {
      keyWords: '',
    }
  },
  props:['editem','themesList'],
  methods: {
    sparray(data){
      if(data){
        return data.join(" ")
      }

    },
    submit() {
        let  _this=this
        let  ThemeId=_this.editem.themeId
        let name=document.querySelector('#name').value;
        let keyWords=document.querySelector('#keyWords').value;
        let unkeyWords=document.querySelector('#unkeyWords').value;
        if (_this.editem) {
          var url='/themeapp/editThemeInfo'
          var params = {
                'themeId':ThemeId,
                'themeName':name,
                "keyWords":keyWords,
                'excludeKeyWords':unkeyWords
          }
        }else{
           var url='themeapp/createTheme'
            var params = {
                'userId':'402894fe5a87a362015a87a8655d0000',
                'themeName':name,
                "keyWords":keyWords,
                'excludeKeyWords':unkeyWords
          }
        }
        axios.post(url,qs.stringify(params)).then(function (res) {
           if(res.data.code==0){
             _this.$emit("fetchTheme");
              _this.close()
             
           }
        });
    },
    close() {
      document.querySelector('#name').value=""
      document.querySelector('#keyWords').value=""
      document.querySelector('#unkeyWords').value=""
      store.commit('increment')
    }
  },
  store,
  mounted:function(){

    // this.themesList=this.editem;
  },
  components:{
  }
}
</script>

<style lang="css" scoped>
.inwrap{display: none}
.subject-mangement{
  width: 100vw;
  height: calc(100vh);
  position: fixed;
  top:0;
  left:0;
  right:0;
  bottom:0;
  display: flex;
  flex-direction: column;
  justify-content: space-around;
  background: #fff;
  display: none;
}
.inner{
  width: 100vw;
  height: 100%;
  
}
.formlist-wra{
  flex: 1;
}
div.show{
  display: block;
  display: flex;

}
.header{
  height: 50px;
  background: #ccc;
  line-height: 50px;
  display: flex;
  justify-content: space-between;
  padding: 0 10px;
  background: #1c2532;
   color: #fff;
   font-size: 18px;
}
.header .icon-jiahao{
  font-size: 26px;

}
.header .back{
  font-size: 32px;
  transform: rotate(90deg);
  display: inline-block;
}
.formlist-wrap{
  flex: 1;
  padding:30px;
}
.formlist{
  display: flex;
  flex-direction: column;
  margin-bottom: 30px;
}
.formlist span{
  font-size: 15px;
  margin-bottom: 10px;
  color: #000;
}
.formlist input{
 height: 40px;
 padding: 0 10px;
 background: #ebebeb;
 border-radius: 5px;
 outline: none;
}
.formlist .tip{
  line-height: 1.2;
  font-size: 12px;
  margin-top: 5px;
  color: #999;
}
.btn{
  height: 40px;
  border-radius: 5px;
  color: #fff;
  background: #ff3333;
  display: block;
  border:none;
  width: 100%;
  font-size: 15px;outline: none;
}
</style>
