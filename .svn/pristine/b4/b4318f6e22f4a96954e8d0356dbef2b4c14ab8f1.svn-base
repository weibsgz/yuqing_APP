<template >
  <div class="inwrap">
    <div class="inner">
      <div class="header">
        <span class='iconfont icon-fanhui back' @click='close()'></span>
        <span class="headerTitle">推送设置</span>
        <span class="iconfont icon-jiahao"  @click='add()'></span>
      </div>
      <div class="tablelist">
        <mt-loadmore  :top-method="loadTop" :bottom-method="loadBottom" :auto-fill="false" ref="loadmore" :bottom-all-loaded="allLoaded">
        <div class="thisDiv" v-for="(item , key , index ) in entityList">
          <div class="top">
            <div class="right">
              <p class="name">{{item.themeName}}</p>
              <!--<p class="keywords" >-->
                <!--<span>关键字</span>-->
                <!--<span v-for="i in item.keyWords">{{i}} </span>-->
              <!--</p>-->
            </div>
            <mt-switch v-model="item.isuse" @change="switchCha(item)" style="display: inline-block;"></mt-switch>
          </div>
          <div class="bottom">
            <span @click='edit(item)'>编辑</span>
            <span @click='del(key,item)'>删除</span>
          </div>
        </div>
         </mt-loadmore>
      </div>
      <footerTab></footerTab>
    </div>
    <mt-popup id="NewPush" class="wh100" v-model="apss.aa" popup-transition="popup-fade" :modal=false>
      <NewPush  ref="NewPush" v-on:onChangePss="onChangePss"></NewPush>
    </mt-popup>
    <mt-popup id="EditPush" class="wh100" v-model="apss.bb" popup-transition="popup-fade" :modal=false>
      <EditPush  :editem='editem' ref="EditPush" v-on:onChangePss="onChangePss"></EditPush>
    </mt-popup>
  </div>
</template>
<script>
//  import {
//    fetchThemeList
//  } from '../store/personalCenter.js';
  import footerTab from 'components/footerTab/footerTab';
  import Mgedit from './SubjectMgEdit.vue';
  import NewPush from './NewPush.vue';
  import EditPush from './EditPush.vue';
  import store from '../../../store';
  import { MessageBox,Toast,Loadmore } from 'mint-ui';
  import axios from 'axios';
  import qs from 'qs';
  export default {
    data() {
      return {
        loaded:false,
        entityList: [],
        editem: {},
        apss:{aa:false,bb:false},
        allLoaded:false,
        page:1
//        aoff:{aa:false,bb:false}
      }
    },
//    props:['pss','off'],
//    watch: {
//      pss(val) {
//        this.myps = val;
//      },
//      myps(val){
//        this.$emit("on-ps-change",val)
//      }
//    },
    methods: {
      edit(item) {
//        if (item) {
//          this.editem = item
//        } else {
//          this.editem = ""
//        }
//        this.$store.commit('increment')
        this.apss.bb=!this.apss.bb;
//        this.aoff.bb=true;
        this.$refs.EditPush.init(item);
        // this.$store.commit('setEditContent',item)
      },
      add() {
//        this.$store.commit('increment0')
        this.$refs.NewPush.init();
        this.apss.aa=!this.apss.aa;
//        this.aoff.aa=true;
        // this.$store.commit('setEditContent',item)
      },
      fetchTheme() {
//        alert(123)

        var _this=this
        axios.post('/warnapp/getWarnConfigList',qs.stringify({'userId':this.$store.state.user.userId,pageNum:this.page})).then(function (res) {
          if(res.data.code==0){
            _this.entityList=_this.entityList.concat(res.data.entityList);
            for(var i=0;i<res.data.entityList.length;i++){
              res.data.entityList[i].isuse = !!res.data.entityList[i].isuse;
            }
          }
        });
      },
      del(i,it) {
        let _this=this;
        MessageBox.confirm('确定执行此操作?').then(action => {
          axios.post('/warnapp/del',qs.stringify({'userId':this.$store.state.user.userId,themeId:it.themeId})).then(function (res) {
          if(res.data.code==0){
            Toast({
              message: res.data.message,
            })
            _this.entityList.splice(i, 1)
          }
        })
      })
      }
      ,close(){
        this.$emit('onChangePss','bb');
      },
      onChangePss(val){
        this.apss[val] =!this.apss[val];
      },
      switchCha:function (it) {
        var params={
          userId:this.$store.state.user.userId,
          themeId:it.themeId,
          isuse:(!it.isuse)?0:1
        }
        axios.post('/warnapp/change',qs.stringify(params)).then(function (res) {
          if(res.data.code==0){
            Toast({
              message: res.data.message,
            });
          }
        });
      },
       loadTop(id) {
                //刷新列表
                this.page = 1;
                this.entityList.length = 0;
                this.fetchTheme();
                this.$refs.loadmore.onTopLoaded();
            },

            loadBottom(id) {
                // 加载更多数据

                console.log('正在上拉加载。。')

                this.page++
                this.fetchTheme();
                this.$refs.loadmore.onBottomLoaded();

            }
    },
    mounted: function() {
      // document.ontouchmove = function(e){ e.preventDefault(); }
    },
    components: {
      NewPush,
      footerTab,
      EditPush,
      Loadmore,
      Toast
    },
    store
  }
</script>

<style lang="css" scoped>
	.headerTitle{
		width: 80%;
		text-align: center;
		display: inline-block;
	}
  .inwrap{
    position: fixed;
    top: 0;
    right:0;
    bottom:0px;
    left:0;
    background: #fff;
    /*display: none;*/
    /*z-index: 2000;*/
  }
  .inner{
    width: 100vw;
    height: 100%;
    display: flex;
    flex-direction: column;
    justify-content: space-around;
  }
  .header{
    height: 45px;
    background: #ccc;
    line-height: 45px;
    display: flex;
    justify-content: space-between;
    padding: 0 10px;
    background: #1c2532;
    color: #fff;
    font-size: 16px;
  }
  .header .icon-jiahao{
    font-size: 26px;
  }
  .header .back{
    font-size: 20px;
    /*transform: rotate(90deg);*/
    display: inline-block;
		width: 5%;
  }
  /*.mint-popup{*/
    /*width: 100vw;*/
    /*height: calc(100vh - 60px);*/
    /*margin-top:-30px;*/
    /*box-sizing: border-box;*/
    /*!*background: transparent;*!*/
    /*z-index: -1;*/
  /*}*/
  /*.btnbox{*/
    /*display: flex;*/
    /*height: 40px;*/
    /*font-size: 1.3rem;*/
    /*justify-content: flex-end;*/
    /*align-items: center;*/
    /*padding: 0 10px;*/
    /*box-sizing: border-box;*/
  /*}*/
  .tablelist{
    flex:1;
    background: #f0f0f0;
    overflow-y: auto;
    margin-bottom: 80px;
  }
 .thisDiv{
    background: #fff;
    margin-top: 15px;
    padding-top: 15px;
    display: flex;
    box-sizing: border-box;
    justify-content: space-between;
    flex-direction: column;
  }
  .tablelist .top{
    display: flex;
    justify-content: space-between;
    padding: 0 15px;
    align-items: flex-start;
    margin-bottom: 10px;
  }
  .tablelist .bottom{
    /*padding: 10px 0;*/
    border:1px solid #dbdbdb;
    border-width: 1px 0;
    /*display: flex;*/
    align-content: center;

    overflow: hidden;
  }
  .tablelist .bottom span{
    /*flex: 1;
    display: flex;*/
    justify-content: center;
    font-size: 15px;
    color: #ff3333;
    width: 50%;
   float: left;
   box-sizing: border-box;
   text-align: center;
   height: 100%;
   padding: 10px 0;
  }
  .mint-switch-input:checked + .mint-switch-core {
    border-color: #4cd964;
    background-color: #4cd964;}
  .mint-switch-core{
    width: 50px;
    height: 30px;
  }
  .mint-switch-core::after{
    width: 28px;
    height: 28px;
  }
  .tablelist .bottom span:nth-child(1){
    border-right: 1px solid #dbdbdb;
  }
  .tablelist .right{
    /*display: flex;*/
    display: inline-block;
    width: 80%;
    flex-direction: column;
  }
  .tablelist>div .name{
    font-size: 18px;
    color: #000;
    font-weight: 700;
    margin-bottom: 10px;
  }
  .tablelist>div .keywords{
    font-size: 13px;
    color: #8a8a8a;
    margin-bottom: 10px;
  }
  .wh100{
    height: 100vh;
    width: 100vw;
  }
  /*div.showCpts{*/
    /*display: block;*/
  /*}*/
  /*div.hideCpts{*/
    /*display: block;*/
  /*}*/
  /*.footerTab{*/
  /*position: static!important;*/
  /*}*/
</style>
