<template>
  <div>
    <mt-field label="手机号" placeholder="请输入手机号" type="number" v-model.trim="form.phonenum"></mt-field>
    <mt-field label="验证码" placeholder="短信验证码" type="number" v-model.trim="form.yzm"></mt-field>
    <mt-field label="设置密码" placeholder="6~12位字母数字组合" type="password" v-model.trim="form.password"></mt-field>
    <mt-field label="确认密码" placeholder="请确认密码" type="password" v-model.trim="form.confirm"></mt-field>
    <mt-button type="danger"  @click.native="register" size="large">提交</mt-button>
  </div>
</template>

<script>
  //引入组件
  import Vue from 'vue';
  import { Field } from 'mint-ui';
  import {USER_SIGNIN} from 'store/user'
  import axios from 'axios'
  Vue.component(Field.name, Field);

  //创造构造器
  export default {
      data() {
        // 姓名验证
        let validatorNum = function (rule, value, callback) {
          if (!value) {
            callback(new Error('请输入手机号'))
          } else if (!/^(((13[0-9]{1})|(15[0-9]{1})|(18[0-9]{1}))+\d{8})$/.test(value) || value.length != 11) {
            callback(new Error('请输入有效的手机号码'))
          } else {
            callback()
          }
        }
        // 密码验证
        let validatorPass = (rule, value, callback) => {
          if (!value) {
            callback(new Error('请输入密码'))
          } else if (!/^[A-Za-z0-9]+$/.test(value) || value.length < 6||value.length>12) {
            callback(new Error('密码只能是6~12位的英文和数字组合'))
          } else {
            callback()
          }
        }
        // 重复密码验证
        let validatorPass2 = (rule, value, callback) => {
          if (!value) {
            callback(new Error('请输入确认密码'))
          } else if (!/^[A-Za-z0-9]+$/.test(value) || value.length < 6||value.length>12) {
            callback(new Error('密码只能是6~12位的英文和数字组合'))
          } else {
            if (this.ruleForm.password !== value) {
              callback(new Error('两次确认密码不一致'))
            }
            callback()
          }
        }
        return {
          form: {
            phonenum: '',
            yzm: '',
            password:'',
            confirm:''
          }
        }
      },
    components: {
    },
    methods:{
      register(){
        axios.get('static/data/login.json')
          .then(function(res){
            console.log(res);
          })
          .catch(function(err){
            console.log(err);
          })
      }
    }
  }
</script>

<style>

</style>
